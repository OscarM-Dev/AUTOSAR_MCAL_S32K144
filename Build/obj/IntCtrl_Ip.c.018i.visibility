
Marking local functions: DevAssert/0


Marking externally visible functions: IntCtrl_Ip_ClearPending/13 IntCtrl_Ip_GetPriority/12 IntCtrl_Ip_SetPriority/11 IntCtrl_Ip_DisableIrq/10 IntCtrl_Ip_EnableIrq/9 IntCtrl_Ip_InstallHandler/8 IntCtrl_Ip_Init/7 IntCtrl_Ip_ClearPendingPrivileged/6 IntCtrl_Ip_GetPriorityPrivileged/5 IntCtrl_Ip_SetPriorityPrivileged/4 IntCtrl_Ip_DisableIrqPrivileged/3 IntCtrl_Ip_EnableIrqPrivileged/2 IntCtrl_Ip_InstallHandlerPrivileged/1


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

__INT_SRAM_START/14 (__INT_SRAM_START) @06cc4480
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: IntCtrl_Ip_InstallHandlerPrivileged/1 (addr) 
  Availability: not_available
  Varpool flags:
IntCtrl_Ip_ClearPending/13 (IntCtrl_Ip_ClearPending) @06cc2000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_Init/7 
  Calls: IntCtrl_Ip_ClearPendingPrivileged/6 
IntCtrl_Ip_GetPriority/12 (IntCtrl_Ip_GetPriority) @06cc2d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: IntCtrl_Ip_GetPriorityPrivileged/5 
IntCtrl_Ip_SetPriority/11 (IntCtrl_Ip_SetPriority) @06cc2a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_Init/7 
  Calls: IntCtrl_Ip_SetPriorityPrivileged/4 
IntCtrl_Ip_DisableIrq/10 (IntCtrl_Ip_DisableIrq) @06cc27e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_Init/7 
  Calls: IntCtrl_Ip_DisableIrqPrivileged/3 
IntCtrl_Ip_EnableIrq/9 (IntCtrl_Ip_EnableIrq) @06cc2540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_Init/7 
  Calls: IntCtrl_Ip_EnableIrqPrivileged/2 
IntCtrl_Ip_InstallHandler/8 (IntCtrl_Ip_InstallHandler) @06cc22a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_Init/7 
  Calls: IntCtrl_Ip_InstallHandlerPrivileged/1 
IntCtrl_Ip_Init/7 (IntCtrl_Ip_Init) @06c00e00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: IntCtrl_Ip_DisableIrq/10 IntCtrl_Ip_EnableIrq/9 IntCtrl_Ip_InstallHandler/8 IntCtrl_Ip_SetPriority/11 IntCtrl_Ip_ClearPending/13 DevAssert/0 DevAssert/0 
IntCtrl_Ip_ClearPendingPrivileged/6 (IntCtrl_Ip_ClearPendingPrivileged) @06c008c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_ClearPending/13 
  Calls: DevAssert/0 DevAssert/0 
IntCtrl_Ip_GetPriorityPrivileged/5 (IntCtrl_Ip_GetPriorityPrivileged) @06c00380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_GetPriority/12 
  Calls: DevAssert/0 DevAssert/0 
IntCtrl_Ip_SetPriorityPrivileged/4 (IntCtrl_Ip_SetPriorityPrivileged) @06c00d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_SetPriority/11 
  Calls: DevAssert/0 DevAssert/0 DevAssert/0 
IntCtrl_Ip_DisableIrqPrivileged/3 (IntCtrl_Ip_DisableIrqPrivileged) @06c00a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_DisableIrq/10 
  Calls: DevAssert/0 DevAssert/0 
IntCtrl_Ip_EnableIrqPrivileged/2 (IntCtrl_Ip_EnableIrqPrivileged) @06c007e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_EnableIrq/9 
  Calls: DevAssert/0 DevAssert/0 
IntCtrl_Ip_InstallHandlerPrivileged/1 (IntCtrl_Ip_InstallHandlerPrivileged) @06c00540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: __INT_SRAM_START/14 (addr) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: IntCtrl_Ip_InstallHandler/8 
  Calls: DevAssert/0 DevAssert/0 DevAssert/0 
DevAssert/0 (DevAssert) @06bfa380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: IntCtrl_Ip_Init/7 IntCtrl_Ip_Init/7 IntCtrl_Ip_ClearPendingPrivileged/6 IntCtrl_Ip_ClearPendingPrivileged/6 IntCtrl_Ip_GetPriorityPrivileged/5 IntCtrl_Ip_GetPriorityPrivileged/5 IntCtrl_Ip_SetPriorityPrivileged/4 IntCtrl_Ip_SetPriorityPrivileged/4 IntCtrl_Ip_SetPriorityPrivileged/4 IntCtrl_Ip_DisableIrqPrivileged/3 IntCtrl_Ip_DisableIrqPrivileged/3 IntCtrl_Ip_EnableIrqPrivileged/2 IntCtrl_Ip_EnableIrqPrivileged/2 IntCtrl_Ip_InstallHandlerPrivileged/1 IntCtrl_Ip_InstallHandlerPrivileged/1 IntCtrl_Ip_InstallHandlerPrivileged/1 
  Calls: 
IntCtrl_Ip_ClearPending (IRQn_Type eIrqNumber)
{
  <bb 2> :
  IntCtrl_Ip_ClearPendingPrivileged (eIrqNumber);
  return;

}


IntCtrl_Ip_GetPriority (IRQn_Type eIrqNumber)
{
  uint8 D.6138;

  <bb 2> :
  D.6138 = IntCtrl_Ip_GetPriorityPrivileged (eIrqNumber);

  <bb 3> :
<L0>:
  return D.6138;

}


IntCtrl_Ip_SetPriority (IRQn_Type eIrqNumber, uint8 u8Priority)
{
  <bb 2> :
  IntCtrl_Ip_SetPriorityPrivileged (eIrqNumber, u8Priority);
  return;

}


IntCtrl_Ip_DisableIrq (IRQn_Type eIrqNumber)
{
  <bb 2> :
  IntCtrl_Ip_DisableIrqPrivileged (eIrqNumber);
  return;

}


IntCtrl_Ip_EnableIrq (IRQn_Type eIrqNumber)
{
  <bb 2> :
  IntCtrl_Ip_EnableIrqPrivileged (eIrqNumber);
  return;

}


IntCtrl_Ip_InstallHandler (IRQn_Type eIrqNumber, void (*IntCtrl_Ip_IrqHandlerType) (void) pfNewHandler, void (*IntCtrl_Ip_IrqHandlerType) (void) * const pfOldHandler)
{
  <bb 2> :
  IntCtrl_Ip_InstallHandlerPrivileged (eIrqNumber, pfNewHandler, pfOldHandler);
  return;

}


IntCtrl_Ip_Init (const struct IntCtrl_Ip_CtrlConfigType * pIntCtrlCtrlConfig)
{
  uint32 irqIdx;
  IntCtrl_Ip_StatusType D.6136;

  <bb 2> :
  _1 = pIntCtrlCtrlConfig != 0B;
  DevAssert (_1);
  _2 = pIntCtrlCtrlConfig->u32ConfigIrqCount;
  _3 = _2 <= 89;
  DevAssert (_3);
  irqIdx = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _4 = pIntCtrlCtrlConfig->aIrqConfig;
  _5 = irqIdx * 12;
  _6 = _4 + _5;
  _7 = _6->eIrqNumber;
  IntCtrl_Ip_ClearPending (_7);
  _8 = pIntCtrlCtrlConfig->aIrqConfig;
  _9 = irqIdx * 12;
  _10 = _8 + _9;
  _11 = _10->eIrqNumber;
  _12 = pIntCtrlCtrlConfig->aIrqConfig;
  _13 = irqIdx * 12;
  _14 = _12 + _13;
  _15 = _14->u8IrqPriority;
  IntCtrl_Ip_SetPriority (_11, _15);
  _16 = pIntCtrlCtrlConfig->aIrqConfig;
  _17 = irqIdx * 12;
  _18 = _16 + _17;
  _19 = _18->eIrqNumber;
  _20 = pIntCtrlCtrlConfig->aIrqConfig;
  _21 = irqIdx * 12;
  _22 = _20 + _21;
  _23 = _22->pfHandler;
  IntCtrl_Ip_InstallHandler (_19, _23, 0B);
  _24 = pIntCtrlCtrlConfig->aIrqConfig;
  _25 = irqIdx * 12;
  _26 = _24 + _25;
  _27 = _26->bIrqEnabled;
  if (_27 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _28 = pIntCtrlCtrlConfig->aIrqConfig;
  _29 = irqIdx * 12;
  _30 = _28 + _29;
  _31 = _30->eIrqNumber;
  IntCtrl_Ip_EnableIrq (_31);
  goto <bb 6>; [INV]

  <bb 5> :
  _32 = pIntCtrlCtrlConfig->aIrqConfig;
  _33 = irqIdx * 12;
  _34 = _32 + _33;
  _35 = _34->eIrqNumber;
  IntCtrl_Ip_DisableIrq (_35);

  <bb 6> :
  irqIdx = irqIdx + 1;

  <bb 7> :
  _36 = pIntCtrlCtrlConfig->u32ConfigIrqCount;
  if (irqIdx < _36)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.6136 = 0;

  <bb 9> :
<L6>:
  return D.6136;

}


IntCtrl_Ip_ClearPendingPrivileged (IRQn_Type eIrqNumber)
{
  <bb 2> :
  _1 = eIrqNumber >= 0;
  DevAssert (_1);
  _2 = eIrqNumber <= 122;
  DevAssert (_2);
  eIrqNumber.10_3 = (long unsigned int) eIrqNumber;
  _4 = eIrqNumber.10_3 & 31;
  _5 = 3758153984B;
  eIrqNumber.11_6 = (long unsigned int) eIrqNumber;
  _7 = eIrqNumber.11_6 >> 5;
  _8 = 1 << _4;
  _5->ICPR[_7] = _8;
  return;

}


IntCtrl_Ip_GetPriorityPrivileged (IRQn_Type eIrqNumber)
{
  uint8 shift;
  uint8 priority;
  uint8 D.6131;

  <bb 2> :
  _1 = eIrqNumber >= 0;
  DevAssert (_1);
  _2 = eIrqNumber <= 122;
  DevAssert (_2);
  shift = 4;
  _3 = 3758153984B;
  eIrqNumber.9_4 = (long unsigned int) eIrqNumber;
  _5 = _3->IP[eIrqNumber.9_4];
  _6 = (int) _5;
  _7 = (int) shift;
  _8 = _6 >> _7;
  priority = (uint8) _8;
  D.6131 = priority;

  <bb 3> :
<L0>:
  return D.6131;

}


IntCtrl_Ip_SetPriorityPrivileged (IRQn_Type eIrqNumber, uint8 u8Priority)
{
  uint8 shift;

  <bb 2> :
  _1 = eIrqNumber >= 0;
  DevAssert (_1);
  _2 = eIrqNumber <= 122;
  DevAssert (_2);
  _3 = u8Priority <= 15;
  DevAssert (_3);
  shift = 4;
  _4 = (long unsigned int) u8Priority;
  _5 = (int) shift;
  _6 = _4 << _5;
  _7 = 3758153984B;
  eIrqNumber.8_8 = (long unsigned int) eIrqNumber;
  _9 = (unsigned char) _6;
  _7->IP[eIrqNumber.8_8] = _9;
  return;

}


IntCtrl_Ip_DisableIrqPrivileged (IRQn_Type eIrqNumber)
{
  <bb 2> :
  _1 = eIrqNumber >= 0;
  DevAssert (_1);
  _2 = eIrqNumber <= 122;
  DevAssert (_2);
  eIrqNumber.6_3 = (long unsigned int) eIrqNumber;
  _4 = eIrqNumber.6_3 & 31;
  _5 = 3758153984B;
  eIrqNumber.7_6 = (long unsigned int) eIrqNumber;
  _7 = eIrqNumber.7_6 >> 5;
  _8 = 1 << _4;
  _5->ICER[_7] = _8;
  return;

}


IntCtrl_Ip_EnableIrqPrivileged (IRQn_Type eIrqNumber)
{
  <bb 2> :
  _1 = eIrqNumber >= 0;
  DevAssert (_1);
  _2 = eIrqNumber <= 122;
  DevAssert (_2);
  eIrqNumber.4_3 = (long unsigned int) eIrqNumber;
  _4 = eIrqNumber.4_3 & 31;
  _5 = 3758153984B;
  eIrqNumber.5_6 = (long unsigned int) eIrqNumber;
  _7 = eIrqNumber.5_6 >> 5;
  _8 = 1 << _4;
  _5->ISER[_7] = _8;
  return;

}


IntCtrl_Ip_InstallHandlerPrivileged (IRQn_Type eIrqNumber, void (*IntCtrl_Ip_IrqHandlerType) (void) pfNewHandler, void (*IntCtrl_Ip_IrqHandlerType) (void) * const pfOldHandler)
{
  void (*IntCtrl_Ip_IrqHandlerType) (void) * pVectorRam;
  sint32 dev_irqNumber;

  <bb 2> :
  dev_irqNumber = eIrqNumber;
  _1 = dev_irqNumber >= 0;
  DevAssert (_1);
  _2 = dev_irqNumber <= 122;
  DevAssert (_2);
  _3 = 3758153728B;
  _4 = _3->VTOR;
  __INT_SRAM_START.0_5 = (long unsigned int) &__INT_SRAM_START;
  _6 = _4 >= __INT_SRAM_START.0_5;
  DevAssert (_6);
  _7 = 3758153728B;
  _8 = _7->VTOR;
  pVectorRam = (void (*IntCtrl_Ip_IrqHandlerType) (void) *) _8;
  if (pfOldHandler != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  eIrqNumber.1_9 = (sizetype) eIrqNumber;
  _10 = eIrqNumber.1_9 + 16;
  _11 = _10 * 4;
  _12 = pVectorRam + _11;
  _13 = *_12;
  *pfOldHandler = _13;

  <bb 4> :
  eIrqNumber.2_14 = (sizetype) eIrqNumber;
  _15 = eIrqNumber.2_14 + 16;
  _16 = _15 * 4;
  _17 = pVectorRam + _16;
  *_17 = pfNewHandler;
  __asm__ __volatile__(" ISB");
  __asm__ __volatile__(" DSB");
  return;

}


DevAssert (volatile boolean x)
{
  <bb 2> :
  x.3_1 = x;
  if (x.3_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0");
  goto <bb 3>; [INV]

  <bb 4> :
  return;

}


