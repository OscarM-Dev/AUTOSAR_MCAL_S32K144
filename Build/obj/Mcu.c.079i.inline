IPA summary for Mcu_ClkSrcFailureNotification/19 is missing.
IPA summary for Mcu_SleepOnExit/18 is missing.
IPA summary for Mcu_GetVersionInfo/17 is missing.
IPA summary for Mcu_GetResetRawValue/16 is missing.
IPA summary for Mcu_GetResetReason/15 is missing.
IPA summary for Mcu_GetPllStatus/14 is missing.
IPA summary for Mcu_SetMode/13 is missing.
IPA summary for Mcu_InitClock/12 is missing.
IPA summary for Mcu_InitRamSection/11 is missing.
IPA summary for Mcu_Init/10 is missing.
IPA summary for Mcu_HLDChecksExit/9 is missing.
IPA summary for Mcu_HLDChecksEntry/8 is missing.
IPA summary for Mcu_CheckGetVersionInfo/7 is missing.
IPA summary for Mcu_CheckSetMode/6 is missing.
IPA summary for Mcu_CheckInitClock/5 is missing.
IPA summary for Mcu_CheckInit/4 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
node context cache: 0 hits, 0 misses, 0 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :       20 calls, 20.000000 freq, 0 count
function body not available                       :       14 calls, 14.000000 freq, 0 count
IPA summary for Mcu_ClkSrcFailureNotification/19 is missing.
IPA summary for Mcu_SleepOnExit/18 is missing.
IPA summary for Mcu_GetVersionInfo/17 is missing.
IPA summary for Mcu_GetResetRawValue/16 is missing.
IPA summary for Mcu_GetResetReason/15 is missing.
IPA summary for Mcu_GetPllStatus/14 is missing.
IPA summary for Mcu_SetMode/13 is missing.
IPA summary for Mcu_InitClock/12 is missing.
IPA summary for Mcu_InitRamSection/11 is missing.
IPA summary for Mcu_Init/10 is missing.
IPA summary for Mcu_HLDChecksExit/9 is missing.
IPA summary for Mcu_HLDChecksEntry/8 is missing.
IPA summary for Mcu_CheckGetVersionInfo/7 is missing.
IPA summary for Mcu_CheckSetMode/6 is missing.
IPA summary for Mcu_CheckInitClock/5 is missing.
IPA summary for Mcu_CheckInit/4 is missing.
Symbol table:

Mcu_Ipw_SleepOnExit/28 (Mcu_Ipw_SleepOnExit) @06c6be00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Mcu_SleepOnExit/18 
  Calls: 
Mcu_Ipw_GetResetRawValue/27 (Mcu_Ipw_GetResetRawValue) @06c6bb60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Mcu_GetResetRawValue/16 
  Calls: 
Mcu_Ipw_GetResetReason/26 (Mcu_Ipw_GetResetReason) @06c6b9a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Mcu_GetResetReason/15 
  Calls: 
SchM_Exit_Mcu_MCU_EXCLUSIVE_AREA_00/25 (SchM_Exit_Mcu_MCU_EXCLUSIVE_AREA_00) @06c6b700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Mcu_SetMode/13 
  Calls: 
Mcu_Ipw_SetMode/24 (Mcu_Ipw_SetMode) @06c6b620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Mcu_SetMode/13 
  Calls: 
SchM_Enter_Mcu_MCU_EXCLUSIVE_AREA_00/23 (SchM_Enter_Mcu_MCU_EXCLUSIVE_AREA_00) @06c6b540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Mcu_SetMode/13 
  Calls: 
Mcu_Ipw_InitClock/22 (Mcu_Ipw_InitClock) @06c6b380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Mcu_InitClock/12 
  Calls: 
Mcu_Ipw_Init/21 (Mcu_Ipw_Init) @06c6b0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Mcu_Init/10 
  Calls: 
Det_ReportError/20 (Det_ReportError) @06c5dc40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Mcu_HLDChecksEntry/8 Mcu_HLDChecksEntry/8 Mcu_CheckGetVersionInfo/7 Mcu_CheckSetMode/6 Mcu_CheckInitClock/5 Mcu_CheckInit/4 
  Calls: 
Mcu_ClkSrcFailureNotification/19 (Mcu_ClkSrcFailureNotification) @06c5d7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Mcu_pConfigPtr/3 (read) Mcu_pConfigPtr/3 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Mcu_SleepOnExit/18 (Mcu_SleepOnExit) @06c5d540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Mcu_HLDChecksExit/9 Mcu_Ipw_SleepOnExit/28 Mcu_HLDChecksEntry/8 
Mcu_GetVersionInfo/17 (Mcu_GetVersionInfo) @06c5d2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Mcu_CheckGetVersionInfo/7 
Mcu_GetResetRawValue/16 (Mcu_GetResetRawValue) @06c5d000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Mcu_HLDChecksExit/9 Mcu_Ipw_GetResetRawValue/27 Mcu_HLDChecksEntry/8 
Mcu_GetResetReason/15 (Mcu_GetResetReason) @06c53b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Mcu_HLDChecksExit/9 Mcu_Ipw_GetResetReason/26 Mcu_HLDChecksEntry/8 
Mcu_GetPllStatus/14 (Mcu_GetPllStatus) @06c53620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Mcu_HLDChecksExit/9 Mcu_HLDChecksEntry/8 
Mcu_SetMode/13 (Mcu_SetMode) @06c530e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Mcu_au8ModeConfigIds/1 (read) Mcu_pConfigPtr/3 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Mcu_HLDChecksExit/9 SchM_Exit_Mcu_MCU_EXCLUSIVE_AREA_00/25 Mcu_Ipw_SetMode/24 SchM_Enter_Mcu_MCU_EXCLUSIVE_AREA_00/23 Mcu_CheckSetMode/6 Mcu_HLDChecksEntry/8 
Mcu_InitClock/12 (Mcu_InitClock) @06c53d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Mcu_au8ClockConfigIds/0 (read) Mcu_pConfigPtr/3 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Mcu_HLDChecksExit/9 Mcu_Ipw_InitClock/22 Mcu_CheckInitClock/5 Mcu_HLDChecksEntry/8 
Mcu_InitRamSection/11 (Mcu_InitRamSection) @06c53a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Mcu_HLDChecksExit/9 Mcu_HLDChecksEntry/8 
Mcu_Init/10 (Mcu_Init) @06c537e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Mcu_pConfigPtr/3 (write) Mcu_pConfigPtr/3 (read) Mcu_au8ModeConfigIds/1 (write) Mcu_pConfigPtr/3 (read) Mcu_pConfigPtr/3 (read) Mcu_au8ClockConfigIds/0 (write) Mcu_pConfigPtr/3 (read) Mcu_pConfigPtr/3 (read) Mcu_pConfigPtr/3 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Mcu_HLDChecksExit/9 Mcu_Ipw_Init/21 Mcu_CheckInit/4 Mcu_HLDChecksEntry/8 
Mcu_HLDChecksExit/9 (Mcu_HLDChecksExit) @06c53540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Mcu_eStatus/2 (write) Mcu_eStatus/2 (write) Mcu_eStatus/2 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Mcu_SleepOnExit/18 Mcu_GetResetRawValue/16 Mcu_GetResetReason/15 Mcu_GetPllStatus/14 Mcu_SetMode/13 Mcu_InitClock/12 Mcu_InitRamSection/11 Mcu_Init/10 
  Calls: 
Mcu_HLDChecksEntry/8 (Mcu_HLDChecksEntry) @06c532a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Mcu_eStatus/2 (read) Mcu_eStatus/2 (read) Mcu_eStatus/2 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Mcu_SleepOnExit/18 Mcu_GetResetRawValue/16 Mcu_GetResetReason/15 Mcu_GetPllStatus/14 Mcu_SetMode/13 Mcu_InitClock/12 Mcu_InitRamSection/11 Mcu_Init/10 
  Calls: Det_ReportError/20 Det_ReportError/20 
Mcu_CheckGetVersionInfo/7 (Mcu_CheckGetVersionInfo) @06c53000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Mcu_GetVersionInfo/17 
  Calls: Det_ReportError/20 
Mcu_CheckSetMode/6 (Mcu_CheckSetMode) @06b42c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Mcu_pConfigPtr/3 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Mcu_SetMode/13 
  Calls: Det_ReportError/20 
Mcu_CheckInitClock/5 (Mcu_CheckInitClock) @06b42e00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Mcu_pConfigPtr/3 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Mcu_InitClock/12 
  Calls: Det_ReportError/20 
Mcu_CheckInit/4 (Mcu_CheckInit) @06b42b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Mcu_Init/10 
  Calls: Det_ReportError/20 
Mcu_pConfigPtr/3 (Mcu_pConfigPtr) @06b3e870
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Mcu_InitClock/12 (read) Mcu_SetMode/13 (read) Mcu_Init/10 (write) Mcu_Init/10 (read) Mcu_CheckInitClock/5 (read) Mcu_CheckSetMode/6 (read) Mcu_Init/10 (write) Mcu_Init/10 (read) Mcu_Init/10 (read) Mcu_Init/10 (read) Mcu_Init/10 (read) Mcu_ClkSrcFailureNotification/19 (read) Mcu_ClkSrcFailureNotification/19 (read) 
  Availability: available
  Varpool flags:
Mcu_eStatus/2 (Mcu_eStatus) @06b3e828
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Mcu_HLDChecksEntry/8 (read) Mcu_HLDChecksEntry/8 (read) Mcu_HLDChecksEntry/8 (write) Mcu_HLDChecksExit/9 (write) Mcu_HLDChecksExit/9 (write) Mcu_HLDChecksExit/9 (write) 
  Availability: available
  Varpool flags: initialized
Mcu_au8ModeConfigIds/1 (Mcu_au8ModeConfigIds) @06b3e750
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Mcu_Init/10 (write) Mcu_SetMode/13 (read) 
  Availability: available
  Varpool flags:
Mcu_au8ClockConfigIds/0 (Mcu_au8ClockConfigIds) @06b3e6c0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Mcu_Init/10 (write) Mcu_InitClock/12 (read) 
  Availability: available
  Varpool flags:

;; Function Mcu_CheckInit (Mcu_CheckInit, funcdef_no=0, decl_uid=5918, cgraph_uid=1, symbol_order=4)

Mcu_CheckInit (const struct Mcu_ConfigType * ConfigPtr)
{
  Std_ReturnType CheckStatus;
  Std_ReturnType D.6005;
  Std_ReturnType _8;

  <bb 2> :
  CheckStatus_3 = 0;
  if (ConfigPtr_4(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  CheckStatus_6 = 1;
  Det_ReportError (101, 0, 0, 17);

  <bb 4> :
  # CheckStatus_1 = PHI <CheckStatus_3(2), CheckStatus_6(3)>
  _8 = CheckStatus_1;

  <bb 5> :
<L2>:
  return _8;

}



;; Function Mcu_CheckInitClock (Mcu_CheckInitClock, funcdef_no=1, decl_uid=5920, cgraph_uid=2, symbol_order=5)

Mcu_CheckInitClock (Mcu_ClockType ClockSetting)
{
  Std_ReturnType CheckStatus;
  Std_ReturnType D.6009;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.0_1;
  long unsigned int _2;
  Std_ReturnType _10;

  <bb 2> :
  CheckStatus_5 = 0;
  Mcu_pConfigPtr.0_1 = Mcu_pConfigPtr;
  _2 = Mcu_pConfigPtr.0_1->NoClkConfigs;
  if (ClockSetting_7(D) >= _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  CheckStatus_8 = 1;
  Det_ReportError (101, 0, 2, 11);

  <bb 4> :
  # CheckStatus_3 = PHI <CheckStatus_5(2), CheckStatus_8(3)>
  _10 = CheckStatus_3;

  <bb 5> :
<L2>:
  return _10;

}



;; Function Mcu_CheckSetMode (Mcu_CheckSetMode, funcdef_no=2, decl_uid=5922, cgraph_uid=3, symbol_order=6)

Mcu_CheckSetMode (Power_Ip_ModeType McuMode)
{
  Std_ReturnType CheckStatus;
  Std_ReturnType D.6013;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.1_1;
  long unsigned int _2;
  Std_ReturnType _10;

  <bb 2> :
  CheckStatus_5 = 0;
  Mcu_pConfigPtr.1_1 = Mcu_pConfigPtr;
  _2 = Mcu_pConfigPtr.1_1->NoModeConfigs;
  if (McuMode_7(D) >= _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  CheckStatus_8 = 1;
  Det_ReportError (101, 0, 8, 12);

  <bb 4> :
  # CheckStatus_3 = PHI <CheckStatus_5(2), CheckStatus_8(3)>
  _10 = CheckStatus_3;

  <bb 5> :
<L2>:
  return _10;

}



;; Function Mcu_CheckGetVersionInfo (Mcu_CheckGetVersionInfo, funcdef_no=3, decl_uid=5924, cgraph_uid=4, symbol_order=7)

Mcu_CheckGetVersionInfo (const struct Std_VersionInfoType * VersionInfo)
{
  Std_ReturnType CheckStatus;
  Std_ReturnType D.6017;
  Std_ReturnType _8;

  <bb 2> :
  CheckStatus_3 = 0;
  if (VersionInfo_4(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  CheckStatus_6 = 1;
  Det_ReportError (101, 0, 9, 16);

  <bb 4> :
  # CheckStatus_1 = PHI <CheckStatus_3(2), CheckStatus_6(3)>
  _8 = CheckStatus_1;

  <bb 5> :
<L2>:
  return _8;

}



;; Function Mcu_HLDChecksEntry (Mcu_HLDChecksEntry, funcdef_no=4, decl_uid=5926, cgraph_uid=5, symbol_order=8)

Mcu_HLDChecksEntry (uint8 McuServiceID)
{
  Std_ReturnType CheckStatus;
  Std_ReturnType D.6027;
  <unnamed type> Mcu_eStatus.2_1;
  <unnamed type> Mcu_eStatus.3_2;
  Std_ReturnType _13;

  <bb 2> :
  CheckStatus_5 = 0;
  if (McuServiceID_6(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  Mcu_eStatus.2_1 = Mcu_eStatus;
  if (Mcu_eStatus.2_1 != 3)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  CheckStatus_11 = 1;
  Det_ReportError (101, 0, McuServiceID_6(D), 19);
  goto <bb 8>; [INV]

  <bb 5> :
  Mcu_eStatus.3_2 = Mcu_eStatus;
  if (Mcu_eStatus.3_2 == 3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  CheckStatus_9 = 1;
  Det_ReportError (101, 0, McuServiceID_6(D), 15);
  goto <bb 8>; [INV]

  <bb 7> :
  Mcu_eStatus = 10;

  <bb 8> :
  # CheckStatus_3 = PHI <CheckStatus_11(4), CheckStatus_9(6), CheckStatus_5(7), CheckStatus_5(3)>
  _13 = CheckStatus_3;

  <bb 9> :
<L8>:
  return _13;

}



;; Function Mcu_HLDChecksExit (Mcu_HLDChecksExit, funcdef_no=5, decl_uid=5929, cgraph_uid=6, symbol_order=9)

Mcu_HLDChecksExit (Std_ReturnType RetStatus, uint8 McuServiceID)
{
  <bb 2> :
  if (McuServiceID_2(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (RetStatus_5(D) == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Mcu_eStatus = 12;
  goto <bb 7>; [INV]

  <bb 5> :
  Mcu_eStatus = 3;
  goto <bb 7>; [INV]

  <bb 6> :
  Mcu_eStatus = 12;

  <bb 7> :
  return;

}



;; Function Mcu_Init (Mcu_Init, funcdef_no=6, decl_uid=5825, cgraph_uid=7, symbol_order=10)

Mcu_Init (const struct Mcu_ConfigType * ConfigPtr)
{
  Std_ReturnType CheckStatus;
  uint32 NoConfigs;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.4_1;
  const struct Mcu_ModeConfigType[1] * _2;
  long unsigned int _3;
  unsigned char _4;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.5_5;
  long unsigned int _6;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.6_7;
  const struct Mcu_ClockConfigType[1] * _8;
  long unsigned int _9;
  unsigned char _10;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.7_11;
  long unsigned int _12;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.8_13;
  const struct Mcu_HwIPsConfigType * _14;

  <bb 2> :
  CheckStatus_23 = Mcu_HLDChecksEntry (0);
  if (CheckStatus_23 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  CheckStatus_26 = Mcu_CheckInit (ConfigPtr_24(D));
  if (CheckStatus_26 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  Mcu_pConfigPtr = ConfigPtr_24(D);
  NoConfigs_29 = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  Mcu_pConfigPtr.4_1 = Mcu_pConfigPtr;
  _2 = Mcu_pConfigPtr.4_1->ModeConfigArrayPtr;
  _3 = (*_2)[NoConfigs_15].ModeConfigId;
  _4 = (unsigned char) NoConfigs_15;
  Mcu_au8ModeConfigIds[_3] = _4;
  NoConfigs_35 = NoConfigs_15 + 1;

  <bb 6> :
  # NoConfigs_15 = PHI <NoConfigs_29(4), NoConfigs_35(5)>
  Mcu_pConfigPtr.5_5 = Mcu_pConfigPtr;
  _6 = Mcu_pConfigPtr.5_5->NoModeConfigs;
  if (NoConfigs_15 < _6)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  NoConfigs_30 = 0;
  goto <bb 9>; [INV]

  <bb 8> :
  Mcu_pConfigPtr.6_7 = Mcu_pConfigPtr;
  _8 = Mcu_pConfigPtr.6_7->ClockConfigArrayPtr;
  _9 = (*_8)[NoConfigs_16].ClkConfigId;
  _10 = (unsigned char) NoConfigs_16;
  Mcu_au8ClockConfigIds[_9] = _10;
  NoConfigs_33 = NoConfigs_16 + 1;

  <bb 9> :
  # NoConfigs_16 = PHI <NoConfigs_30(7), NoConfigs_33(8)>
  Mcu_pConfigPtr.7_11 = Mcu_pConfigPtr;
  _12 = Mcu_pConfigPtr.7_11->NoClkConfigs;
  if (NoConfigs_16 < _12)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  Mcu_pConfigPtr.8_13 = Mcu_pConfigPtr;
  _14 = Mcu_pConfigPtr.8_13->HwIPsConfigPtr;
  Mcu_Ipw_Init (_14);
  goto <bb 12>; [INV]

  <bb 11> :
  Mcu_pConfigPtr = 0B;

  <bb 12> :
  Mcu_HLDChecksExit (CheckStatus_26, 0);

  <bb 13> :
  return;

}



;; Function Mcu_InitRamSection (Mcu_InitRamSection, funcdef_no=7, decl_uid=5827, cgraph_uid=8, symbol_order=11)

Mcu_InitRamSection (Mcu_RamSectionType RamSection)
{
  Std_ReturnType RamStatus;
  Std_ReturnType D.6042;
  unsigned char _1;
  Std_ReturnType _7;

  <bb 2> :
  RamStatus_3 = 1;
  _1 = Mcu_HLDChecksEntry (1);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Mcu_HLDChecksExit (0, 1);

  <bb 4> :
  _7 = RamStatus_3;

  <bb 5> :
<L2>:
  return _7;

}



;; Function Mcu_InitClock (Mcu_InitClock, funcdef_no=8, decl_uid=5829, cgraph_uid=9, symbol_order=12)

Mcu_InitClock (Mcu_ClockType ClockSetting)
{
  Std_ReturnType ClockStatus;
  const uint8 ClockConfigId;
  Std_ReturnType D.6048;
  unsigned char _1;
  unsigned char _2;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.9_3;
  const struct Mcu_ClockConfigType[1] * _4;
  int _5;
  const struct Mcu_ClockConfigType * _6;
  Std_ReturnType _20;

  <bb 2> :
  ClockConfigId_13 = Mcu_au8ClockConfigIds[ClockSetting_12(D)];
  ClockStatus_14 = 1;
  _1 = Mcu_HLDChecksEntry (2);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = Mcu_CheckInitClock (ClockSetting_12(D));
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Mcu_pConfigPtr.9_3 = Mcu_pConfigPtr;
  _4 = Mcu_pConfigPtr.9_3->ClockConfigArrayPtr;
  _5 = (int) ClockConfigId_13;
  _6 = &(*_4)[_5];
  Mcu_Ipw_InitClock (_6);
  ClockStatus_18 = 0;

  <bb 5> :
  # ClockStatus_7 = PHI <ClockStatus_14(3), ClockStatus_18(4)>
  Mcu_HLDChecksExit (0, 2);

  <bb 6> :
  # ClockStatus_8 = PHI <ClockStatus_14(2), ClockStatus_7(5)>
  _20 = ClockStatus_8;

  <bb 7> :
<L4>:
  return _20;

}



;; Function Mcu_SetMode (Mcu_SetMode, funcdef_no=9, decl_uid=5831, cgraph_uid=10, symbol_order=13)

Mcu_SetMode (Mcu_ModeType McuMode)
{
  const uint8 McuModeId;
  unsigned char _1;
  unsigned char _2;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.10_3;
  const struct Mcu_ModeConfigType[1] * _4;
  int _5;
  const struct Mcu_ModeConfigType * _6;

  <bb 2> :
  McuModeId_11 = Mcu_au8ModeConfigIds[McuMode_10(D)];
  _1 = Mcu_HLDChecksEntry (8);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = Mcu_CheckSetMode (McuMode_10(D));
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  SchM_Enter_Mcu_MCU_EXCLUSIVE_AREA_00 ();
  Mcu_pConfigPtr.10_3 = Mcu_pConfigPtr;
  _4 = Mcu_pConfigPtr.10_3->ModeConfigArrayPtr;
  _5 = (int) McuModeId_11;
  _6 = &(*_4)[_5];
  Mcu_Ipw_SetMode (_6);
  SchM_Exit_Mcu_MCU_EXCLUSIVE_AREA_00 ();

  <bb 5> :
  Mcu_HLDChecksExit (0, 8);

  <bb 6> :
  return;

}



;; Function Mcu_GetPllStatus (Mcu_GetPllStatus, funcdef_no=10, decl_uid=5833, cgraph_uid=11, symbol_order=14)

Mcu_GetPllStatus ()
{
  Mcu_PllStatusType PllStatus;
  Mcu_PllStatusType D.6056;
  unsigned char _1;
  Mcu_PllStatusType _7;

  <bb 2> :
  PllStatus_3 = 2;
  _1 = Mcu_HLDChecksEntry (4);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Mcu_HLDChecksExit (0, 4);

  <bb 4> :
  _7 = PllStatus_3;

  <bb 5> :
<L2>:
  return _7;

}



;; Function Mcu_GetResetReason (Mcu_GetResetReason, funcdef_no=11, decl_uid=5835, cgraph_uid=12, symbol_order=15)

Mcu_GetResetReason ()
{
  Mcu_ResetType ResetReason;
  Mcu_ResetType D.6060;
  unsigned char _1;
  Mcu_ResetType _10;

  <bb 2> :
  ResetReason_4 = 14;
  _1 = Mcu_HLDChecksEntry (5);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  ResetReason_8 = Mcu_Ipw_GetResetReason ();
  Mcu_HLDChecksExit (0, 5);

  <bb 4> :
  # ResetReason_2 = PHI <ResetReason_4(2), ResetReason_8(3)>
  _10 = ResetReason_2;

  <bb 5> :
<L2>:
  return _10;

}



;; Function Mcu_GetResetRawValue (Mcu_GetResetRawValue, funcdef_no=12, decl_uid=5837, cgraph_uid=13, symbol_order=16)

Mcu_GetResetRawValue ()
{
  Mcu_RawResetType RawResetValue;
  Mcu_RawResetType D.6064;
  unsigned char _1;
  Mcu_RawResetType _10;

  <bb 2> :
  RawResetValue_4 = 4294967295;
  _1 = Mcu_HLDChecksEntry (6);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  RawResetValue_8 = Mcu_Ipw_GetResetRawValue ();
  Mcu_HLDChecksExit (0, 6);

  <bb 4> :
  # RawResetValue_2 = PHI <RawResetValue_4(2), RawResetValue_8(3)>
  _10 = RawResetValue_2;

  <bb 5> :
<L2>:
  return _10;

}



;; Function Mcu_GetVersionInfo (Mcu_GetVersionInfo, funcdef_no=13, decl_uid=5839, cgraph_uid=14, symbol_order=17)

Mcu_GetVersionInfo (struct Std_VersionInfoType * versioninfo)
{
  unsigned char _1;

  <bb 2> :
  _1 = Mcu_CheckGetVersionInfo (versioninfo_4(D));
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  versioninfo_4(D)->vendorID = 43;
  versioninfo_4(D)->moduleID = 101;
  versioninfo_4(D)->sw_major_version = 2;
  versioninfo_4(D)->sw_minor_version = 0;
  versioninfo_4(D)->sw_patch_version = 0;

  <bb 4> :
  return;

}



;; Function Mcu_SleepOnExit (Mcu_SleepOnExit, funcdef_no=14, decl_uid=5841, cgraph_uid=15, symbol_order=18)

Mcu_SleepOnExit (Mcu_SleepOnExitType SleepOnExit)
{
  unsigned char _1;

  <bb 2> :
  _1 = Mcu_HLDChecksEntry (26);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Mcu_Ipw_SleepOnExit (SleepOnExit_5(D));
  Mcu_HLDChecksExit (0, 26);

  <bb 4> :
  return;

}



;; Function Mcu_ClkSrcFailureNotification (Mcu_ClkSrcFailureNotification, funcdef_no=15, decl_uid=5843, cgraph_uid=16, symbol_order=19)

Mcu_ClkSrcFailureNotification (Clock_Ip_NameType ClockName)
{
  const struct Mcu_ConfigType * Mcu_pConfigPtr.11_1;
  const struct Mcu_ConfigType * Mcu_pConfigPtr.12_2;
  <unnamed type> _3;

  <bb 2> :
  Mcu_pConfigPtr.11_1 = Mcu_pConfigPtr;
  if (Mcu_pConfigPtr.11_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Mcu_pConfigPtr.12_2 = Mcu_pConfigPtr;
  _3 = Mcu_pConfigPtr.12_2->ClkSrcFailureNotification;

  <bb 4> :
  return;

}


